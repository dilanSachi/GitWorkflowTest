# This is a basic workflow to help you get started with Actions

name: DeletePackages

# Controls when the action will run. 
on: 
  workflow_dispatch:
      inputs:
        owner:
          description: 'Repo Owner'     
          required: true
          default: 'dilanSachi'
        repo:
          description: 'Repository'     
          required: true
          default: 'GitWorkflowTest'
        package:
          description: 'Specific package'
          required: true
        version:
          description: 'Package version'
          required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  delete:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.1.0
      - name: Show username
        run: echo ${{github.actor}}
      - name: Read access list
        run: "cat ./.github/workflows/package_delete_usernames.json| jq -r '.usernames[]|select(.username==\"${{github.actor}}\").username' > /tmp/auth-user.json"
      - name: Set authorized username
        id: setUname
        run: printf "::set-output name=foundUname::%s" $(cat /tmp/auth-user.json)
      - name: Get package version ids
        if: steps.setUname.outputs.foundUname != ''
        run: |
          curl -H "Authorization: bearer ${{ secrets.GITHUB_TOKEN }}" -H "Accept: application/vnd.github.v3+json" https://api.github.com/user/packages/maven/${{ github.event.inputs.package }}/versions -o /tmp/version-ids.json
      - name: Filter packages
        id: setid
        if: steps.setUname.outputs.foundUname != ''
        run: printf "::set-output name=versionId::%s" $(cat /tmp/version-ids.json | jq -r '.[] | select(.name=="${{ github.event.inputs.version }}")|.id')
      - name: Delete selected package
        if: steps.setUname.outputs.foundUname != '' && steps.setid.outputs.versionId != ''
        run: |
          curl -X DELETE -H "Authorization: bearer ${{ secrets.GIT_PAT }}" -H "Accept: application/vnd.github.v3+json" https://api.github.com/user/dilanSachi/packages/maven/${{ github.event.inputs.package }}/versions/${{ steps.setid.outputs.versionId }}
